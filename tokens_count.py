import os, sys, lzma, glob, json
from multiprocessing import Pool
from functools import partial
from threading import Thread
import re

from utils import *
from unicode_utils import *
from tokens_check import *

min_count = 0
max_count = 0

try:
    x = re.sub(r'/*$', "", sys.argv[1].strip())
    if re.match(r"\d+", x):
        input_files = "stats_mode"
        min_count = int(x)
    else:
        input_files = glob.glob(f"{x}/*.lzma")
except:
    input_files = ["data/test.jsonl.xz"]
print(input_files)


try:
    max_count = int( sys.argv[2] )
except:
    pass
print(min_count, max_count)


PATH = f"data/{model_path}"
mkdirs(PATH)


###
def ok(x):
    tid, count = x

    if count < min_count:
        return False

    token = tokenizer.decode(int(tid))

    if count >= max_count:
        # Lo·∫°i n·∫øu ch·ª©a cjk
        if contains_cjk(token):
            return False            
    else:
        # Lo·∫°i n·∫øu kh√¥ng ph·∫£i ascii
        if not_ascii(token):
            return False

    return True


def count_tokens(texts):
    count = {}
    for text in texts:
        token_ids = tokenizer.encode(text)

        for tid in token_ids:

            if tid not in count:
                count[tid] = 0

            count[tid] += 1
    return count


def merge_count(count, x):
    for k, v in x.items():

        if k not in count:
            count[k] = 0

        count[k] += v


def get_uniq_tokens(infile):
    x = infile.split("/")[-1]
    outfile = f"{PATH}/{x}_count.json.xz"

    try: count = json.load(lzma.open(outfile))
    except: count = { "last_line_idx": 0 }

    if os.path.exists(infile) and "last_line_idx" in count: # DONE

        texts = []

        for idx, line in enumerate( lzma.open(infile) ):
            if idx <= count["last_line_idx"]:
                continue

            text = json.loads(line)["text"]
            texts.append( text )

            if idx % 10000 == 9999:
                merge_count(count, count_tokens(texts))
                count["last_line_idx"] = idx

                with lzma.open(outfile, "wt") as f:
                    f.write(json.dumps(count))

                print(f'get_uniq_token {infile}:{count["last_line_idx"]} ...', flush = True)
                texts = []


        merge_count(count, count_tokens(texts))
        count.pop("last_line_idx")

        with lzma.open(outfile, "wt") as f:
            f.write(json.dumps(count))

        print(f'get_uniq_token {infile} DONE.', flush = True)

        count = json.load(lzma.open(outfile))


    if "last_line_idx" in count:
        count.pop("last_line_idx")

    # Lo·∫°i b·ªè cjk and not_ascii
    for k, v in list(count.items()):
        token = tokenizer.decode(int(k))

        if contains_cjk(token):
            count.pop(k)

        elif v < 10 and not_ascii(token):
            count.pop(k)

    return count



def get_final_count(input_files):
    if input_files == "stats_mode":
        input_files = glob.glob(f"{PATH}/*_count.json.xz")
        input_files = [ x.replace("_count.json.xz", "") for x in input_files ]

    count = {}
    with Pool( processes = num_procs() ) as pool:
        for x in pool.imap_unordered(get_uniq_tokens, input_files):
            merge_count(count, x)

    return count


print("get_final_count ...")
count = get_final_count(input_files)

tid_count_pairs = [ [k, v] for k, v in count.items() ]
total = len(tid_count_pairs)


def remove_not_ok_pairs(pairs):
    keep = []
    remove = []

    for x in pairs:
        if ok(x): keep.append(x)
        else:   remove.append(x)

    return keep, remove

chunk_size = 1024*2
chunks = [tid_count_pairs[i:i + chunk_size] for i in range(0, len(tid_count_pairs), chunk_size)]

remain_pairs = []
removed = []

print("remove_not_ok_pairs ...")
with Pool( processes = num_procs() ) as pool:
    for keep, remove in pool.imap_unordered(remove_not_ok_pairs, chunks):
        remain_pairs += keep
        removed += remove

print("sort remain_pairs and removed ...")
remain_pairs.sort( key = lambda x: -x[1] )
removed.sort( key = lambda x: -x[1] )

x = \
    removed[        :    100] + \
                [[ "0" , 0 ]] + \
    removed[ -10100 : -10000] + \
                [[ "0" , 0 ]] + \
    removed[  -100 :        ] + \
                [[ "0" , 0 ]]

maxx = 25
spaces = " " * 100

for tid, count in x:
    if count == 0:
        print("\n")
        continue

    if tid != "last_line_idx":
        token = json.dumps(tokenizer.decode(int(tid)), ensure_ascii = False)
        n = len(token)
        print(f"{tid}{spaces[:10 - len(tid)]} {token}{spaces[:maxx - n]}\t{count:10.0f}")

print(f"{len(remain_pairs)} / {tokenizer.vocab_size}")


'''
python3 tokens_count.py 5000 20000

86543 / 151643

137966     " –Ω–µ–º"                            19977
77334      "„Åó„Åæ„Åô"                          19945
142055     " –Æ"                              19922
132366     "–µ–Ω–∏–µ–º"                           19906
175        "ÔøΩ"                               19888
124639     "„Åù„ÅÜ"                            19884
95106      "‚Äô)"                              19882
125201     "—Ä–∞–∂"                             19829
126604     "–∏–Ω–≥"                             19745
126811     "–Ω—å"                              19737
129297     " –∫–∞—Ä"                            19735
130290     "–Ω–æ–º—É"                            19701
25715      "Ïûê"                              19687
126711     " –¥–æ–º"                            19684
128798     " —Ç–æ–≥–æ"                           19683
127131     "–®"                               19632
55959      "–∞–∑–≤"                             19630
39511      "≈∫"                               19617
135226     "„ÉÄ„É≥"                            19599
129162     " –≥–¥–µ"                            19595
73154      " –¥–≤"                             19582
53586      "–∞—Ü–∏–∏"                            19575
127082     "–µ–¥–∏–Ω"                            19527
134227     " –ø–æ–∫"                            19509
61676      "–ª–µ–Ω–∏—è"                           19489
127015     "–æ–≤–æ"                             19482
144523     "‚û°"                               19455
132339     "–µ–ª–æ"                             19343
125308     "—Ä–µ–Ω"                             19315
98946      "–¥–µ"                              19296
20879      "ÔøΩ"                               19293
125223     "—Ü–µ"                              19284
129244     "—Ä—É–∂"                             19276
58899      "ÔøΩ"                               19272
9722       "ÔøΩ"                               19259
145925     "·ª¥"                               19258
90777      " —É–∂–µ"                            19254
75525      "◊ë"                               19148
129917     " –û–Ω"                             19142
151276     "ÔøΩ"                               19139
50230      "„Åì„ÅÆ"                            19111
125191     " –≥–æ—Ä"                            19084
58411      "◊©"                               19074
95385      "–æ–ª—è"                             19042
144129     "„Äâ"                              19014
52798      "ÔøΩ"                               19004
127011     "„Éñ„É´"                            18997
126228     "–º–µ"                              18991
146036     "‚ùâ"                               18980
124797     "–¥—É"                              18978
126394     "–±–æ"                              18976
124662     "—Å–∏"                              18917
125626     "–≤–∞—Ä"                             18894
125258     "–¥–µ–Ω"                             18882
30785      "‡∏¥"                               18867
125286     "—Ä–∞—Å"                             18837
145082     "≈à"                               18799
45577      " ŸÅ"                              18759
39697      "ÿ≤"                               18739
28319      "‡∏µ"                               18677
128992     " –µ–µ"                             18674
144867     "‚ô†"                               18657
148414     "‡≤∞"                               18626
94304      " ‚â†"                              18571
126362     "–Ω–µ–π"                             18570
99012      "‡ÆøÔøΩ"                              18564
127126     "—Ü–µ–≤"                             18494
128856     " —Ç–æ–º"                            18484
41312      "‡¶æ"                               18470
21460      "‚ñà‚ñà"                              18430
96155      " ÔøΩ"                              18428
146770     "‹´"                               18414
144185     "üòÇ"                              18411
20184      "‡∏ô"                               18407
84764      "–æ—Å—Ç–∏"                            18403
125046     "„É¢"                              18378
144781     "Àö"                               18356
141688     " –ø–æ–Ω"                            18356
16116      "ƒ±n"                              18350
147952     "‹©"                               18339
72661      "–æ–ª–æ–≤"                            18319
128647     "—Å–∞"                              18290
84487      "–ù–∞"                              18275
43871      "„É¨"                              18267
133049     " –ø–æ–ø"                            18256
128729     " –æ–Ω–∏"                            18252
70354      "≈£i"                              18250
130201     "–µ–Ω–∏—é"                            18218
125717     " –ø–ª"                             18214
124972     " —Å–æ–±"                            18198
56226      "„Éó"                              18189
145454     "—í"                               18189
133962     " —Ä–µ–∫"                            18181
125608     "–ª–∞—Å"                             18175
44993      "‚Ä¶.\n\n"                          18167
97751      " –∫–æ—Ç–æ—Ä—ã–π"                        18166
19841      "‡πâ"                               18158
126252     "—Å–µ"                              18142
98967      "‚Ä¶it"                             18134
47985      "ÎèÑ"                              18121


143835     " ÎÑò"                               397
83777      "\"]=$"                             397
142603     "„Éó„É™„É≥"                            397
141406     "„Åó„Å¶„Åä„Åè"                                  397
142170     "„Çπ„Éö„Éº„Çπ"                                  397
143749     "–µ–∑–∂–∞"                              397
128655     "ÿ¨Ÿà"                                397
129132     "ŸÜŸà"                                397
130918     " ÿßŸÑÿ±Ÿäÿßÿ∂"                           397
133808     "‡πÄ‡∏Å‡∏©"                               397
134685     " chcia"                            396
144361     "—£"                                 396
128522     " ÿ≠ÿ™"                               396
141        "ÔøΩ"                                 396
133487     " Ïñ¥Îäê"                             396
133329     " Ïù¥Ìï¥"                             396
136164     "ÿπÿßŸÖŸÑ"                              396
126615     " Í∑∏Îü∞"                             396
129485     " √∂zel"                             395
72629      " pupper"                           395
125210     "‡∏ß‡∏î"                                395
126750     "√≥wi"                               395
65024      "NoArgsConstructor"                 395
23574      "CppMethod"                         395
127491     "ƒÖda"                               395
148281     " ß"                                 395
122448     "ÔøΩ"                                 395
135231     "„Åô„Åì„Å®"                            395
146472     "€á"                                 394
73745      "(strtolower"                       394
137178     " Y√∂net"                            394
146634     "‚ó¢"                                 394
125503     " ÿßŸÑÿπŸÖŸÑ"                            394
134693     " √ßƒ±kt"                             394
128034     " yƒ±"                               394
70920      " voksen"                           394
129781     " ÿßŸÑŸÜÿßÿ≥"                            394
143862     " Îäê"                               394
134920     "int√©rieur"                         394
129767     "ÿ®ŸÉ"                                394
126376     "◊®◊©"                                394
125354     "◊î◊§"                                394
45216      "@endif"                            393
73466      "\":@\""                            393
130457     "t√∂r"                               393
127245     "malƒ±"                              393
90838      ";]/"                               392
65019      "(IDC"                              392
22210      " erotische"                        392
74800      " QLatin"                           392
146849     "·¥•"                                 392
124643     "◊®◊ô◊ù"                               392
84999      "/******************************************************************************/\n"                                                        392
20047      "ÔøΩ"                                 392
10738      "CLUD"                              391
94563      "\\Helpers"                         391
61660      "-'.$"                              391
128848     " √∂nemli"                           391
131681     "dziƒá"                              391
141228     " jakie≈õ"                           391
127247     "–µ–≥–æ–¥–Ω—è"                            391
130412     "dƒ±m"                               391
125309     "ÿßÿ≥Ÿä"                               391
95575      "_CNTL"                             390
142241     " nadzie"                           390
142776     "Î∑∞"                                390
124295     "‡∏õ‡∏•"                                390
151462     "·à®"                                 390
124285     "ŸÄŸÄ"                                390
124359     "ŸÇŸà"                                390
139627     "Ï¢å"                                390
141355     "–µ—Å—Ç–µ—Å—Ç–≤"                           390
125332     " ÿßŸÑÿ®ÿ±"                             390
145911     "—ê"                                 390
145928     "„Öè"                                389
125178     "◊ô◊©◊®◊ê◊ú"                             389
137071     " kaldƒ±r"                           389
90547      "$insert"                           389
29823      "ernetes"                           389
124625     "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ"                            389
135488     "„Çí„Åî"                              389
126885     "‡∏ó‡∏≤‡∏ô"                               389
127956     " olmad"                            388
91947      "\\Redirect"                        388
96610      "KANJI"                             388
80575      "\"struct"                          388
145429     "üëÄ"                                388
131572     "„Å™„ÅÑ„ÅÆ„Åß"                                  388
146249     "üåé"                                388
144063     "ÏΩú"                                388
97991      "OPTARG"                            388
126456     "ŸÅŸÜ"                                388
128374     " ÿÆŸÑÿßŸÑ"                             388
147751     "·èÇ"                                 388
147391     "ùêø"                                 388
138499     " –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è"                      387
51117      "\tstrcat"                          387
22719      "ICollectionView"                   387
128860     "stƒôp"                              387
125096     "◊¶◊®"                                387


137973     "„Å´ÔøΩ"                                10
135920     " ÿßŸÑŸÅÿ™"                              10
135928     " ◊ú◊ï◊û◊®"                              10
141867     " w≈Ços√≥w"                            10
134268     "ÿ≥ÿ§"                                 10
141148     "ÿ£Ÿàÿ±"                                10
149079     "Íºç"                                 10
126390     "maktad"                              9
143555     " m√ºdah"                              9
143855     " vazge"                              9
85749      "\tRuntimeObject"                     9
52209      "arsimp"                              9
27530      ">\\<^"                               9
141847     " rahats"                             9
70523      " t√©cn"                               9
84865      " datingsider"                        9
140071     " g√ºndem"                             8
88887      "lparr"                               8
76889      " \\<^"                               8
143783     " u√ßu"                                8
90745      " porn√¥s"                             8
130670     "bilit√†"                              8
93552      "BracketAccess"                       8
54616      " ?>\r\n\r\n"                         8
98018      "-Cds"                                8
139705     " d√ºnyan"                             8
90196      "CppI"                                8
78593      "_:*"                                 8
81368      " uLocal"                             7
70237      "+lsi"                                7
53178      "CppGeneric"                          7
74379      "$LANG"                               7
141514     " √ßer√ß"                               7
23543      "<lemma"                              7
55125      ".sulake"                             7
139225     "sist√™ncia"                           6
70290      " PodsDummy"                          6
75271      "LANGADM"                             6
30727      "{EIF"                                6
97971      "-cmpr"                               6
34822      "CppMethodPointer"                    6
81943      " bakeka"                             6
135685     " kt√≥r"                               6
138155     " se√ßen"                              6
88920      "rparr"                               5
70266      "drFc"                                5
71916      " EnumerableStream"                   5
96636      "\tRTCT"                              5
58490      "IntoConstraints"                     5
143548     " m√ºkem"                              5
51262      "SpecWarn"                            5
141803     " d√©sorm"                             4
84047      "Ubergraph"                           4
57966      " hexatrigesimal"                     4
71645      " XBOOLE"                             4
137548     "f√≠cio"                               4
56261      "_REALTYPE"                           4
49511      "VMLINUX"                             4
88343      " kutje"                              3
67089      "_UClass"                             3
72128      "_InternalArray"                      3
70127      " FINSEQ"                             3
42487      "atrigesimal"                         3
40359      "rigesimal"                           3
67796      ";\r\r\r\n"                           3
68861      "CHKERRQ"                             3
45854      " swingerclub"                        3
74420      " NUITKA"                             3
131653     " bir√ß"                               2
142818     " zobow"                              2
139042     " d√≥la"                               2
62685      " RTWF"                               2
86278      " sexkontakte"                        2
49074      "PlainOldData"                        2
89312      "selectorMethod"                      2
139890     " s√ºrecin"                            2
60863      "_RGCTX"                              2
61488      "rgctx"                               2
71568      "'])){\r\n"                           2
44046      "%timeout"                            2
95637      "departureday"                        2
141414     " M√ºsl√º"                              2
86841      "$fdata"                              2
96684      " JSBracketAccess"                    1
44694      ">tagger"                             1
137568     " √ºcrets"                             1
139570     "powiedzie"                           1
93973      "-vesm"                               1
74472      "aincontri"                           1
128199     "przedsi"                             1
78778      " \"(\\<"                             1
88371      "useRal"                              1
49225      "adaptiveStyles"                      1
86923      "/ayushman"                           1
139034     "nqu√™te"                              1
54714      " ZeroConstructor"                    1
53623      " IsPlainOldData"                     1
136454     " s√ºrek"                              1
78640      " Hexatrigesimal"                     1
83576      " wannonce"                           1

'''